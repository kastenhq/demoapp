// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"demoapp/models"
)

// HealthzReader is a Reader for the Healthz structure.
type HealthzReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HealthzReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewHealthzOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewHealthzDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewHealthzOK creates a HealthzOK with default headers values
func NewHealthzOK() *HealthzOK {
	return &HealthzOK{}
}

/*HealthzOK handles this case with default header values.

Response for a health check requestt
*/
type HealthzOK struct {
	Payload *models.ServiceInfo
}

func (o *HealthzOK) Error() string {
	return fmt.Sprintf("[GET /healthz][%d] healthzOK  %+v", 200, o.Payload)
}

func (o *HealthzOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHealthzDefault creates a HealthzDefault with default headers values
func NewHealthzDefault(code int) *HealthzDefault {
	return &HealthzDefault{
		_statusCode: code,
	}
}

/*HealthzDefault handles this case with default header values.

General Error
*/
type HealthzDefault struct {
	_statusCode int

	Payload *models.ErrorDetail
}

// Code gets the status code for the healthz default response
func (o *HealthzDefault) Code() int {
	return o._statusCode
}

func (o *HealthzDefault) Error() string {
	return fmt.Sprintf("[GET /healthz][%d] healthz default  %+v", o._statusCode, o.Payload)
}

func (o *HealthzDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
